This is Sherpa.info, produced by makeinfo version 6.6 from Sherpa.texi.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License.


File: Sherpa.info,  Node: LHC_HTTBar,  Prev: LHC_VHJets,  Up: HJets

9.3.5 Associated t anti-t H production at the LHC
-------------------------------------------------

This set-up illustrates the interface to an external loop matrix element
generator as well as the possibility of specifying hard decays for
particles emerging from the hard interaction.  The process generated is
the production of a Higgs boson in association with a top quark pair
from two light partons in the initial state.  Each top quark decays into
an (anti-)bottom quark and a W boson.  The W bosons in turn decay to
either quarks or leptons.

     (run){
       # generator parameters
       EVENTS 0; LGEN:=TTH;
       ME_SIGNAL_GENERATOR Amegic LGEN;
       HARD_DECAYS On; HARD_MASS_SMEARING 0;
       STABLE[6] 0; STABLE[24] 0;
       WIDTH[25] 0; WIDTH[6] 0; 
     
       # physics parameters
       SCALES VAR{sqr(175+125/2)};
       PDF_LIBRARY LHAPDFSherpa;
       PDF_SET MSTW2008nlo90cl;
       USE_PDF_ALPHAS 1;
     
       # collider parameters
       BEAM_1 2212; BEAM_ENERGY_1 7000;
       BEAM_2 2212; BEAM_ENERGY_2 7000;  
     }(run);
     
     (processes){
       Process 93 93 -> 25 6 -6;
       NLO_QCD_Mode MC@NLO;
       Loop_Generator LGEN;
       Order (*,1);
       End process;
     }(processes);

Things to notice:
   * The matrix elements are interfaced from [Rei01] in *note
     References:: [Rei01a] in *note References:: The shared library
     necessary for running this setup is built using scons.
   * The top quarks are stable in the hard matrix elements.  They are
     decayed using the internal decay module, indicated by the settings
     'HARD_DECAYS 1' and 'STABLE[6] 0; STABLE[24] 0'.
   * LHAPDF is used (see *note ISR Parameters::) with the
     parametrization of the strong coupling taken from LHAPDF itself as
     indicated by 'USE_PDF_ALPHAS 1' (see *note SM::).


File: Sherpa.info,  Node: TopsJets,  Next: SingleTopChannels,  Prev: HJets,  Up: Examples

9.4 Top quark (pair) + jets production
======================================

* Menu:

* Top quark pair production::
* Top quark pair production including approximate EW corrections::
* Tops plus W in MC@NLO::


File: Sherpa.info,  Node: Top quark pair production,  Next: Top quark pair production including approximate EW corrections,  Up: TopsJets

9.4.1 Top quark pair production
-------------------------------

     (run){
       % general setting
       EVENTS 1M; ERROR 0.99;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
       SCALE_VARIATIONS 0.25,0.25 0.25,1. 1.,0.25 1.,1. 1.,4. 4.,1. 4.,4.;
       CORE_SCALE QCD;
       METS_BBAR_MODE 5;
     
       % tags for process setup
       NJET:=3; LJET:=2,3; QCUT:=20.;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       LOOPGEN:=OpenLoops;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 13500.;
       BEAM_2 2212; BEAM_ENERGY_2 13500.;
     
       % decays
       HARD_DECAYS On;
       HDH_STATUS[24,2,-1]=0
       HDH_STATUS[24,4,-3]=0
       HDH_STATUS[-24,-2,1]=0
       HDH_STATUS[-24,-4,3]=0
       STABLE[24] 0; STABLE[6] 0; WIDTH[6] 0;
     
       NLO_SMEAR_THRESHOLD 1;
       NLO_SMEAR_POWER 2;
     }(run)
     
     (processes){
       Process : 93 93 ->  6 -6 93{NJET};
       Order (*,0); CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LOOPGEN {LJET};
       Max_N_Quarks 6 {5,6,7,8};
       Integration_Error 0.05 {5,6,7,8};
       Scales LOOSE_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2} {5,6,7,8};
       End process
     }(processes)

Things to notice:
   * We use OpenLoops to compute the virtual corrections [Cas11] in
     *note References::
   * We match matrix elements and parton showers using the MC@NLO
     technique for massive particles, as described in [Hoe13] in *note
     References::
   * A non-default METS core scale setter is used, cf.  *note METS scale
     setting with multiparton core processes::
   * We enable top decays through the internal decay module using
     'HARD_DECAYS 1'
   * We calculate on-the-fly a 7-point scale variation, cf.  *note Scale
     and PDF variations::.


File: Sherpa.info,  Node: Top quark pair production including approximate EW corrections,  Next: Tops plus W in MC@NLO,  Prev: Top quark pair production,  Up: TopsJets

9.4.2 Top quark pair production including approximate EW corrections
--------------------------------------------------------------------

     (run){
       % general setting
       EVENTS 1M; ERROR 0.99;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
       SCALE_VARIATIONS 0.25,0.25 0.25,1. 1.,0.25 1.,1. 1.,4. 4.,1. 4.,4.;
       ASSOCIATED_CONTRIBUTIONS_VARIATIONS EW EW|LO1 EW|LO1|LO2 EW|LO1|LO2|LO3;
       CORE_SCALE QCD;
       METS_BBAR_MODE 5;
     
       % tags for process setup
       NJET:=3; LJET:=2,3; QCUT:=20.;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       OL_PARAMETERS preset 2 ew_renorm_scheme 1;
       LOOPGEN:=OpenLoops;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 13500.;
       BEAM_2 2212; BEAM_ENERGY_2 13500.;
     
       % decays
       HARD_DECAYS On;
       HDH_STATUS[24,2,-1]=0
       HDH_STATUS[24,4,-3]=0
       HDH_STATUS[-24,-2,1]=0
       HDH_STATUS[-24,-4,3]=0
       STABLE[24] 0; STABLE[6] 0; WIDTH[6] 0;
     
       NLO_SMEAR_THRESHOLD 1;
       NLO_SMEAR_POWER 2;
     }(run)
     
     (processes){
       Process : 93 93 ->  6 -6 93{NJET};
       Order (*,0); CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LOOPGEN {LJET};
       Associated_Contributions EW|LO1|LO2|LO3 {2};
       Associated_Contributions EW|LO1|LO2|LO3 {3};
       Max_N_Quarks 6 {5,6,7,8};
       Integration_Error 0.05 {5,6,7,8};
       Scales LOOSE_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2} {5,6,7,8};
       End process
     }(processes)

Things to notice:
   * In addition to the setup in *note Top quark pair production:: we
     add approximate EW corrections, cf.  [Gut18] in *note References::
   * Please note: this setup currently only works with a beta version of
     the upcoming OpenLoops release.
   * The approximate EW corrections are added as additional variations
     on the event weight.


File: Sherpa.info,  Node: Tops plus W in MC@NLO,  Prev: Top quark pair production including approximate EW corrections,  Up: TopsJets

9.4.3 Production of a top quark pair in association with a W-boson
------------------------------------------------------------------

     (run){
       % general settings
       EVENTS 10000;
     
       % tags and settings for scale definitions
       FSF:=1.0; RSF:=1.0; QSF:=1.0;
       SCALES STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
     
       % tags and settings for ME generators
       LGEN:=OpenLoops;
       ME_SIGNAL_GENERATOR Comix Amegic LGEN;
       EVENT_GENERATION_MODE Weighted;
     
       % settings for hard decays
       HARD_DECAYS On;
       HDH_STATUS[24,2,-1]=0;
       HDH_STATUS[24,4,-3]=0;
       HDH_STATUS[24,16,-15]=0;
     
       % model parameters
       WIDTH[6] 0; WIDTH[24] 0;
     
       % technical parameters
       EXCLUSIVE_CLUSTER_MODE 1;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 4000;
       BEAM_2 2212; BEAM_ENERGY_2 4000;
     }(run);
     
     (processes){
       Process 93 93 -> 6 -6 24;
       NLO_QCD_Mode MC@NLO;
       ME_Generator Amegic;
       RS_ME_Generator Comix;
       Loop_Generator LGEN;
       Order (*,1);
       End process;
     }(processes);

Things to notice:
   * Hard decays are enabled through 'HARD_DECAYS=On' and spin
     correlations are switched on through 'HARD_SPIN_CORRELATIONS=1'
   * Top quarks and W bosons are set unstable through 'STABLE[6]=0'
     'STABLE[24]=0'.  As they are final states in the hard matrix
     elements, their width is set to zero using 'WIDTH[6]=0' and
     'WIDTH[24]=0'.
   * Certain decay channels are disabled using
     'HDH_NO_DECAY={24,2,-1}|{24,4,-3}|{24,16,-15}'


File: Sherpa.info,  Node: SingleTopChannels,  Next: VVJets,  Prev: TopsJets,  Up: Examples

9.5 Single-top production in the s, t and tW channel
====================================================

In this section, examples for single-top production in three different
channels are described.  For the channel definitions and a validation of
these setups, see [Both17] in *note References::

* Menu:

* t-channel single-top production::
* t-channel single-top production with N_f=4::
* s-channel single-top production::
* tW-channel single-top production::


File: Sherpa.info,  Node: t-channel single-top production,  Next: t-channel single-top production with N_f=4,  Up: SingleTopChannels

9.5.1 t-channel single-top production
-------------------------------------

     # SHERPA run card for t-channel single top-quark production at MC@NLO
     # and N_f = 5
     
     (run){
       # general setting
       EVENTS 1M
     
       # me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN
       EVENT_GENERATION_MODE Weighted
       LOOPGEN:=OpenLoops
       HARD_DECAYS On
     
       # scales, tags for scale variations
       # SCALES STRICT_METS:
       #   use CKKW clustering scale for real/MC@NLO emission
       # CORESCALE SingleTop:
       #   use Mandelstam \hat{t} for t-channel 2->2 core process
       SCF:=1.; FSF:=SCF; RSF:=SCF; QSF:=SCF
       SCALES STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2}
       CORE_SCALE SingleTop
     
       # collider setup
       BEAM_1 2212; BEAM_ENERGY_1 4000
       BEAM_2 2212; BEAM_ENERGY_2 4000
     
       # disable hadronic W decays
       HDH_STATUS[24,2,-1] 0
       HDH_STATUS[24,4,-3] 0
       HDH_STATUS[-24,-2,1] 0
       HDH_STATUS[-24,-4,3] 0
     
       # choose EW Gmu input scheme
       EW_SCHEME 3
     
       # required for using top-quark in ME
       WIDTH[6]  0.
     }(run)
     
     (processes){
       Process 93 93 -> 6 93
       NLO_QCD_Mode MC@NLO
       Order (*,2)
       ME_Generator Amegic
       RS_ME_Generator Comix
       Loop_Generator LOOPGEN
       Min_N_TChannels 1  # require t-channel W
       End process
     }(processes)

Things to notice:
   * We use OpenLoops to compute the virtual corrections [Cas11] in
     *note References::
   * We match matrix elements and parton showers using the MC@NLO
     technique for massive particles, as described in [Hoe13] in *note
     References::
   * A non-default METS core scale setter is used, cf.  *note METS scale
     setting with multiparton core processes::
   * We enable top and W decays through the internal decay module using
     'HARD_DECAYS On'.  The W is restricted to its leptonic decay
     channels.
   * By setting 'Min_N_TChannels 1', only t-channel diagrams are used
     for the calculation


File: Sherpa.info,  Node: t-channel single-top production with N_f=4,  Next: s-channel single-top production,  Prev: t-channel single-top production,  Up: SingleTopChannels

9.5.2 t-channel single-top production with N_f=4
------------------------------------------------

     # SHERPA run card for t-channel single top-quark production at MC@NLO
     # and N_f = 4
     
     (run){
       # general setting
       EVENTS 1M
     
       # me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN
       EVENT_GENERATION_MODE Weighted
       LOOPGEN:=OpenLoops
       HARD_DECAYS On
     
       # scales, tags for scale variations
       #   muR = transverse momentum of the bottom
       #   muF = muQ = transverse momentum of the top
       SCF:=1.; FSF:=SCF; RSF:=SCF; QSF:=SCF
       rscl2:=MPerp2(p[3])
       fscl2:=MPerp2(p[2])
       SCALES VAR{FSF*fscl2}{RSF*rscl2}{QSF*fscl2}
     
       # collider setup
       BEAM_1 2212; BEAM_ENERGY_1 4000
       BEAM_2 2212; BEAM_ENERGY_2 4000
     
       # disable hadronic W decays
       HDH_STATUS[24,2,-1] 0
       HDH_STATUS[24,4,-3] 0
       HDH_STATUS[-24,-2,1] 0
       HDH_STATUS[-24,-4,3] 0
     
       # choose EW Gmu input scheme
       EW_SCHEME 3
     
       # required for using top-quark in ME
       WIDTH[6]  0.
     
       # configure for N_f = 4
       PDF_LIBRARY LHAPDFSherpa
       PDF_SET NNPDF30_nlo_as_0118_nf_4
       USE_PDF_ALPHAS 1
       MASS[5] 4.18  # as in NNPDF30_nlo_as_0118_nf_4
       MASSIVE[5] 1
     }(run)
     
     (processes){
       Process 93 93 -> 6 -5 93
       NLO_QCD_Mode MC@NLO
       Order (*,2)
       ME_Generator Amegic
       RS_ME_Generator Comix
       Loop_Generator LOOPGEN
       Min_N_TChannels 1  # require t-channel W
       End process
     }(processes)

Things to notice:
   * We use an Nf4 PDF and use its definition of the bottom mass
   * See *note t-channel single-top production:: for more comments


File: Sherpa.info,  Node: s-channel single-top production,  Next: tW-channel single-top production,  Prev: t-channel single-top production with N_f=4,  Up: SingleTopChannels

9.5.3 s-channel single-top production
-------------------------------------

     # SHERPA run card for s-channel single top-quark production at MC@NLO
     # and N_f = 5
     
     (run){
       # general setting
       EVENTS 1M
     
       # me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN
       EVENT_GENERATION_MODE Weighted
       LOOPGEN:=OpenLoops
       HARD_DECAYS On
     
       # scales, tags for scale variations
       # SCALES STRICT_METS:
       #   use CKKW clustering scale for real/MC@NLO emission
       # CORESCALE SingleTop:
       #   use Mandelstam \hat{s} for s-channel 2->2 core process
       SCF:=1.; FSF:=SCF; RSF:=SCF; QSF:=SCF
       SCALES STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2}
       CORE_SCALE SingleTop
     
       # collider setup
       BEAM_1 2212; BEAM_ENERGY_1 4000
       BEAM_2 2212; BEAM_ENERGY_2 4000
     
       # disable hadronic W decays
       HDH_STATUS[24,2,-1] 0
       HDH_STATUS[24,4,-3] 0
       HDH_STATUS[-24,-2,1] 0
       HDH_STATUS[-24,-4,3] 0
     
       # choose EW Gmu input scheme
       EW_SCHEME 3
     
       # required for using top-quark in ME
       WIDTH[6]  0.
     
       # there is no bottom in the initial-state in s-channel production
       PARTICLE_CONTAINER 900 lj 1 -1 2 -2 3 -3 4 -4 21
     }(run)
     
     (processes){
       Process 900 900 -> 6 93
       NLO_QCD_Mode MC@NLO
       Order (*,2)
       ME_Generator Amegic
       RS_ME_Generator Comix
       Loop_Generator LOOPGEN
       Max_N_TChannels 0  # require s-channel W
       End process
     }(processes)

Things to notice:
   * By excluding the bottom quark from the initial-state at Born level
     using 'PARTICLE_CONTAINER', and by setting 'Max_N_TChannels 0',
     only s-channel diagrams are used for the calculation
   * See *note t-channel single-top production:: for more comments


File: Sherpa.info,  Node: tW-channel single-top production,  Prev: s-channel single-top production,  Up: SingleTopChannels

9.5.4 tW-channel single-top production
--------------------------------------

     # SHERPA run card for tW-channel single top-quark production at MC@NLO
     # and N_f = 5
     
     (run){
       # general setting
       EVENTS 1M
     
       # me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN
       EVENT_GENERATION_MODE Weighted
       LOOPGEN:=OpenLoops
       HARD_DECAYS On
     
       # scales, tags for scale variations
       #   mu = transverse momentum of the top
       SCF:=1.; FSF:=SCF; RSF:=SCF; QSF:=SCF;
       scl2:=MPerp2(p[3]);
       SCALES VAR{FSF*scl2}{RSF*scl2}{QSF*scl2};
     
       # collider setup
       BEAM_1 2212; BEAM_ENERGY_1 4000
       BEAM_2 2212; BEAM_ENERGY_2 4000
     
       # disable hadronic W decays
       HDH_STATUS[24,2,-1] 0
       HDH_STATUS[24,4,-3] 0
       HDH_STATUS[-24,-2,1] 0
       HDH_STATUS[-24,-4,3] 0
     
       # choose EW Gmu input scheme
       EW_SCHEME 3
     
       # required for using top-quark/W-boson in ME
       WIDTH[6]   0.
       WIDTH[24]  0.
     }(run)
     
     (processes){
       Process 93 93 -> 6 -24
       No_Decay -6  # remove ttbar diagrams
       NLO_QCD_Mode MC@NLO
       Order (*,1)
       ME_Generator Amegic
       RS_ME_Generator Comix
       Loop_Generator LOOPGEN
       End process
     }(processes)

Things to notice:
   * By setting 'No_Decay -6', the doubly-resonant TTbar diagrams are
     removed.  Only the singly-resonant diagrams remain as required by
     the definition of the channel.
   * See *note t-channel single-top production:: for more comments


File: Sherpa.info,  Node: VVJets,  Next: MSSM/UFO,  Prev: SingleTopChannels,  Up: Examples

9.6 Vector boson pairs + jets production
========================================

* Menu:

* Dilepton missing energy and jets production::
* Dilepton missing energy and jets production (gluon initiated)::
* Four lepton and jets production::
* Four lepton and jets production (gluon initiated)::
* WZ production with jets production::
* Same sign dilepton missing energy and jets production::


File: Sherpa.info,  Node: Dilepton missing energy and jets production,  Next: Dilepton missing energy and jets production (gluon initiated),  Up: VVJets

9.6.1 Dilepton, missing energy and jets production
--------------------------------------------------

     (run){
       % general settings
       EVENTS 1M;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
     
       % tags for process setup
       NJET:=3; LJET:=4,5; QCUT:=30.;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       LOOPGEN:=OpenLoops;
       EXCLUSIVE_CLUSTER_MODE 1;
       METS_CLUSTER_MODE 16;
     
       % define parton container without b-quarks to
       % remove any processes with top contributions
       PARTICLE_CONTAINER 901 lightflavs 1 -1 2 -2 3 -3 4 -4 21;
       NLO_CSS_DISALLOW_FLAVOUR 5;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 6500.;
       BEAM_2 2212; BEAM_ENERGY_2 6500.;
     }(run)
     
     (processes){
       Process 901 901 -> 90 91 90 91 901{NJET};
       Order (*,4); CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LOOPGEN {LJET};
       Integration_Error 0.05 {5,6,7,8};
       End process;
     }(processes)
     
     (selector){
       "PT" 90 5.0,E_CMS:5.0,E_CMS [PT_UP]
       Mass 11 -11 10.0 E_CMS
       Mass 13 -13 10.0 E_CMS
       Mass 15 -15 10.0 E_CMS
     }(selector)

Things to notice:
   * 

File: Sherpa.info,  Node: Dilepton missing energy and jets production (gluon initiated),  Next: Four lepton and jets production,  Prev: Dilepton missing energy and jets production,  Up: VVJets

9.6.2 Dilepton, missing energy and jets production (gluon initiated)
--------------------------------------------------------------------

     (run){
       % general settings
       EVENTS 1M;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
       CORE_SCALE VAR{Abs2(p[2]+p[3]+p[4]+p[5])/4.0};
       EXCLUSIVE_CLUSTER_MODE 1;
     
       % tags for process setup
       NJET:=1; QCUT:=20;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       LOOPGEN:=OpenLoops;
       AMEGIC_ALLOW_MAPPING 0;
       % the following phase space libraries have to be generated with the
       % corresponding qq->llvv setup (RUNDATA=Run.tree.dat) first;
       % they will appear in Process/Amegic/lib/libProc_fsrchannels*.so
       SHERPA_LDADD Proc_fsrchannels4 Proc_fsrchannels5;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 6500.;
       BEAM_2 2212; BEAM_ENERGY_2 6500.;
     }(run)
     
     
     (processes){
       Process 93 93 -> 90 90 91 91 93{1};
       CKKW sqr(QCUT/E_CMS);
       Order (2,4) {4};
       Order (3,4) {5};
       Integrator fsrchannels4 {4};
       Integrator fsrchannels5 {5};
       Enable_MHV 10; # initialises external process
       Loop_Generator LOOPGEN;
       Integration_Error 0.02 {5};
       End process;
     }(processes)
     
     (selector){
       Mass 11 -11 10.0 E_CMS;
       Mass 13 -13 10.0 E_CMS;
       Mass 15 -15 10.0 E_CMS;
     }(selector)

Things to notice:
   * 

File: Sherpa.info,  Node: Four lepton and jets production,  Next: Four lepton and jets production (gluon initiated),  Prev: Dilepton missing energy and jets production (gluon initiated),  Up: VVJets

9.6.3 Four lepton and jets production
-------------------------------------

     (run){
       % general settings
       EVENTS 1M;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
     
       % tags for process setup
       NJET:=3; LJET:=4,5; QCUT:=30.;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       LOOPGEN:=OpenLoops;
       EXCLUSIVE_CLUSTER_MODE 1;
       METS_CLUSTER_MODE 16;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 6500.;
       BEAM_2 2212; BEAM_ENERGY_2 6500.;
     }(run)
     
     (processes){
       Process 93 93 -> 90 90 90 90 93{NJET};
       Order (*,4); CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LOOPGEN {LJET};
       Integration_Error 0.05 {5,6,7,8};
       End process;
     }(processes)
     
     (selector){
       "PT" 90 5.0,E_CMS:5.0,E_CMS [PT_UP]
       Mass 11 -11 10.0 E_CMS
       Mass 13 -13 10.0 E_CMS
       Mass 15 -15 10.0 E_CMS
     }(selector)

Things to notice:
   * 

File: Sherpa.info,  Node: Four lepton and jets production (gluon initiated),  Next: WZ production with jets production,  Prev: Four lepton and jets production,  Up: VVJets

9.6.4 Four lepton and jets production (gluon initiated)
-------------------------------------------------------

     (run){
       % general settings
       EVENTS 1M;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
       CORE_SCALE VAR{Abs2(p[2]+p[3]+p[4]+p[5])/4.0};
       EXCLUSIVE_CLUSTER_MODE 1;
     
       % tags for process setup
       NJET:=1; QCUT:=20;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       LOOPGEN:=OpenLoops;
       AMEGIC_ALLOW_MAPPING 0;
       % the following phase space libraries have to be generated with the
       % corresponding qq->llll setup (RUNDATA=Run.tree.dat) first;
       % they will appear in Process/Amegic/lib/libProc_fsrchannels*.so
       SHERPA_LDADD Proc_fsrchannels4 Proc_fsrchannels5;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 6500.;
       BEAM_2 2212; BEAM_ENERGY_2 6500.;
     }(run)
     
     
     (processes){
       Process 93 93 -> 90 90 90 90 93{1};
       CKKW sqr(QCUT/E_CMS);
       Order (2,4) {4};
       Order (3,4) {5};
       Integrator fsrchannels4 {4};
       Integrator fsrchannels5 {5};
       Enable_MHV 10; # initialises external process
       Loop_Generator LOOPGEN;
       Integration_Error 0.02 {5};
       End process;
     }(processes)
     
     (selector){
       Mass 11 -11 10.0 E_CMS;
       Mass 13 -13 10.0 E_CMS;
       Mass 15 -15 10.0 E_CMS;
     }(selector)

Things to notice:
   * 

File: Sherpa.info,  Node: WZ production with jets production,  Next: Same sign dilepton missing energy and jets production,  Prev: Four lepton and jets production (gluon initiated),  Up: VVJets

9.6.5 WZ production with jets production
----------------------------------------

     (run){
       % general settings
       EVENTS 1M;
     
       % scales, tags for scale variations
       FSF:=1.; RSF:=1.; QSF:=1.;
       SCALES METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
       CORE_SCALE VAR{Abs2(p[2]+p[3])/4.0};
       EXCLUSIVE_CLUSTER_MODE 1;
     
       % tags for process setup
       NJET:=3; LJET:=2,3; QCUT:=30.;
     
       % me generator settings
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN;
       EVENT_GENERATION_MODE Weighted;
       LOOPGEN:=OpenLoops;
     
       % decay setup
       HARD_DECAYS On;
       WIDTH[23] 0; WIDTH[24] 0;
       HDH_STATUS[24,2,-1] 2;
       HDH_STATUS[24,4,-3] 2;
       HDH_STATUS[-24,-2,1] 2;
       HDH_STATUS[-24,-4,3] 2;
       HDH_STATUS[23,12,-12] 2;
       HDH_STATUS[23,14,-14] 2;
       HDH_STATUS[23,16,-16] 2;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 6500.;
       BEAM_2 2212; BEAM_ENERGY_2 6500.;
     }(run)
     
     (processes){
       Process 93 93 -> 24 23 93{NJET};
       Order (*,2); CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LOOPGEN {LJET};
       Integration_Error 0.05 {3,4,5,6,7};
       End process;
     
       Process 93 93 -> -24 23 93{NJET};
       Order (*,2); CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LOOPGEN {LJET};
       Integration_Error 0.05 {3,4,5,6,7};
       End process;
     }(processes)

Things to notice:
   * 

File: Sherpa.info,  Node: Same sign dilepton missing energy and jets production,  Prev: WZ production with jets production,  Up: VVJets

9.6.6 Same sign dilepton, missing energy and jets production
------------------------------------------------------------

     (run){
       % general settings
       EVENTS 1M;
     
       % choose EW Gmu input scheme
       EW_SCHEME 3;
     
       % tags for process setup
       NJET:=1; QCUT:=30.;
     
       %scales, tags for scale variations
       FSF:=1.0; RSF:=1.0; QSF:=1.0;
       SCALES=STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};
       CORE_SCALE=VAR{Abs2(p[2]+p[3]+p[4]+p[5])};
       EXCLUSIVE_CLUSTER_MODE 1;
     
       %solves problem with dipole QED modeling
       ME_QED_CLUSTERING_THRESHOLD 10;
     
       % improve integration performance
       PSI_ITMIN 25000;
       INTEGRATION_ERROR 0.05;
     
       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 6500.;
       BEAM_2 2212; BEAM_ENERGY_2 6500.;
     }(run)
     
     
     (processes){
       Process 93 93 -> 11 11 -12 -12 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> 13 13 -14 -14 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> 15 15 -16 -16 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> 11 13 -12 -14 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> 11 15 -12 -16 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> 13 15 -14 -16 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> -11 -11 12 12 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> -13 -13 14 14 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> -15 -15 16 16 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> -11 -13 12 14 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> -11 -15 12 16 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     
       Process 93 93 -> -13 -15 14 16 93 93 93{NJET};
       Order (*,6);
       CKKW sqr(QCUT/E_CMS);
       End process;
     }(processes)
     
     (selector){
       PT 90 5.0 E_CMS;
       NJetFinder 2 15. 0. 0.4 -1;
     }(selector)

Things to notice:
   * 

File: Sherpa.info,  Node: MSSM/UFO,  Next: DIS,  Prev: VVJets,  Up: Examples

9.7 Event generation in the MSSM using UFO
==========================================

This is an example for event generation in the MSSM using Sherpa's UFO
support.  In the corresponding Example directory
'<prefix>/share/SHERPA-MC/Examples/UFO_MSSM/', you will find a directory
'MSSM' that contains the UFO output for the MSSM
(<https://feynrules.irmp.ucl.ac.be/wiki/MSSM>).  To run the example,
generate the model as described in *note UFO Model Interface:: by
executing
cd <prefix>/share/SHERPA-MC/Examples/UFO_MSSM/
<prefix>/bin/Sherpa-generate-model MSSM
An example run card will be written to the working directory.  Use this
run card as a template to generate events.


File: Sherpa.info,  Node: DIS,  Next: FONLO,  Prev: MSSM/UFO,  Up: Examples

9.8 Deep-inelastic scattering
=============================

* Menu:

* HERA::


File: Sherpa.info,  Node: HERA,  Up: DIS

9.8.1 DIS at HERA
-----------------

This is an example of a setup for hadronic final states in
deep-inelastic lepton-nucleon scattering at a centre-of-mass energy of
300 GeV. Corresponding measurements were carried out by the H1 and ZEUS
collaborations at the HERA collider at DESY Hamburg.

     (run){
       EVENTS 1M;
       # technical parameters
       NJET:=4; QCUT:=5; SDIS:=1.0;
       LJET:=2,3; LGEN:=BlackHat;
       ME_SIGNAL_GENERATOR Comix Amegic LGEN;
       EVENT_GENERATION_MODE Weighted;
       RESPECT_MASSIVE_FLAG 1;
       CSS_KIN_SCHEME 1;
       # collider setup
       BEAM_1 -11 27.5; BEAM_2 2212 820; 
       PDF_SET_1 None;
       # hadronization tune
       PARJ(21) 0.432; PARJ(41) 1.05; PARJ(42) 1.0;
       PARJ(47) 0.65; MSTJ(11) 5;
       FRAGMENTATION Lund; DECAYMODEL Lund; 
     }(run);
     
     (processes){
       Process -11 93 -> -11 93 93{NJET};
       CKKW sqr(QCUT/E_CMS)/(1.0+sqr(QCUT/SDIS)/Abs2(p[2]-p[0]));
       NLO_QCD_Mode MC@NLO {LJET};
       Order (*,2); Max_N_Quarks 6;
       ME_Generator Amegic {LJET};
       RS_ME_Generator Comix {LJET};
       Loop_Generator LGEN;
       PSI_ItMin 25000 {3};
       Integration_Error 0.03 {3};
       End process;
     }(processes);
     
     (selector){
       Q2 -11 -11 4 1e12;
     }(selector)

Things to notice:
   * the beams are asymmetric with the positrons at an energy of 27.6
     GeV, while the protons carry 820 GeV of energy.

   * the multi-jet merging cut is set dynamically for each event,
     depending on the photon virtuality, see [Car09] in *note
     References::

   * there is a selector cut on the photon virtuality.  This cut
     implements the experimental requirements for idenitfying the
     deep-inelastic scattering process.


File: Sherpa.info,  Node: FONLO,  Next: SoftQCD,  Prev: DIS,  Up: Examples

9.9 Fixed-order next-to-leading order calculations
==================================================

* Menu:

* NTuple production:: Production of Root NTuples with Sherpa


File: Sherpa.info,  Node: NTuple production,  Up: FONLO

9.9.1 Production of NTuples
---------------------------

Root NTuples are a convenient way to store the result of cumbersome
fixed-order calculations in order to perform multiple analyses.  This
example shows how to generate such NTuples and reweighted them in order
to change factorisation and renormalisation scales.  Note that in order
to use this setup, Sherpa must be configured with option
'--enable-root=/path/to/root', see *note Event output formats::.  If
Sherpa has not been configured with Rivet analysis support, please
disable the analysis using '-a0' on the command line, see *note Command
line::.

When using NTuples, one needs to bear in mind that every calculation
involving jets in the final state is exclusive in the sense that a lower
cutoff on the jet transverse momenta must be imposed.  It is therefore
necessary to check whether the event sample stored in the NTuple is
sufficiently inclusive before using it.  Similar remarks apply when
photons are present in the NLO calculation or when cuts on leptons have
been applied at generation level to increase efficiency.  Every NTuple
should therefore be accompanied by an appropriate documentation.

This example will generate NTuples for the process pp->lvj, where l is
an electron or positron, and v is an electron (anti-)neutrino.  We
identify parton-level jets using the anti-k_T algorithm with R=0.4
[Cac08] in *note References:: to be larger than 20 GeV. No other cuts
are applied at generation level.

     (run){
       EVENTS 100k;
       EVENT_GENERATION_MODE Weighted;
       LGEN:=BlackHat; ME_SIGNAL_GENERATOR Amegic LGEN;
       ### Analysis (please configure with --enable-rivet & --enable-hepmc2)
       ANALYSIS Rivet; ANALYSIS_OUTPUT Analysis/HTp/BVI/;
       ### NTuple output (please configure with '--enable-root')
       EVENT_OUTPUT Root[NTuple_B-like];
     
       BEAM_1 2212; BEAM_ENERGY_1 3500;
       BEAM_2 2212; BEAM_ENERGY_2 3500;
       SCF:=1; ### default scale factor
       SCALES VAR{SCF*sqr(sqrt(H_T2)-PPerp(p[2])-PPerp(p[3])+MPerp(p[2]+p[3]))};
       EW_SCHEME 0; WIDTH_SCHEME Fixed; # sin\theta_w -> 0.23
       DIPOLE_ALPHA 0.03;
       MASSIVE[13] 1; MASSIVE[15] 1;
     }(run);
     (processes){
       ### The Born piece
       Process 93 93 -> 90 91 93;
       NLO_QCD_Mode Fixed_Order;
       NLO_QCD_Part B;
       Order (*,2);
       End process;
       ### The virtual piece
       Process 93 93 -> 90 91 93;
       NLO_QCD_Mode Fixed_Order;
       NLO_QCD_Part V;
       Loop_Generator LGEN;
       Order (*,2);
       End process;
       ### The integrated subtraction piece
       Process 93 93 -> 90 91 93;
       NLO_QCD_Mode Fixed_Order;
       NLO_QCD_Part I;
       Order (*,2);
       End process;
     }(processes);
     (selector){
       FastjetFinder antikt 1 20 0 0.4;
     }(selector);
     
     (analysis){
       BEGIN_RIVET {
         -a ATLAS_2012_I1083318;
         USE_HEPMC_SHORT 1;
         IGNOREBEAMS 1;
       } END_RIVET;
     }(analysis);

Things to notice:
   * NTuple production is enabled by 'EVENT_OUTPUT Root[NTuple_B-like]',
     see *note Event output formats::.
   * The scale used is defined as in [Ber09a] in *note References::
   * 'EW_SCHEME 0; WIDTH_SCHEME Fixed;' are used to set the value of the
     weak mixing angle to 0.23, consistent with EW precision
     measurements.
   * 'DIPOLE_ALPHA 0.03' is used to limit the active phase space of
     dipole subtractions.
   * 'MASSIVE[13] 1; MASSIVE[15] 1;' are used to limit the number of
     active lepton flavours to electron and positron.
   * The option 'USE_HEPMC_SHORT 1' is used in the Rivet analysis
     section as the events produced by Sherpa are not at particle level.

9.9.1.1 NTuple production
.........................

Start Sherpa using the command line
  Sherpa -f Run.B-like.dat
Sherpa will first create source code for its matrix-element
calculations.  This process will stop with a message instructing you to
compile.  Do so by running
  ./makelibs -j4
Launch Sherpa again, using
  Sherpa -f Run.B-like.dat
Sherpa will then compute the Born, virtual and integrated subtraction
contribution to the NLO cross section and generate events.  These events
are analyzed using the Rivet library and stored in a Root NTuple file
called 'NTuple_B-like.root'.  We will use this NTuple later to compute
an NLO uncertainty band.

The real-emission contribution, including subtraction terms, to the NLO
cross section is computed using
  Sherpa -f Run.R-like.dat
Events are generated, analyzed by Rivet and stored in the Root NTuple
file 'NTuple_R-like.root'.

The two analyses of events with Born-like and real-emission-like
kinematics need to be merged, which can be achieved using scripts like
'aidaadd'.  The result can then be plotted and displayed.

9.9.1.2 Usage of NTuples in Sherpa
..................................

Next we will compute the NLO uncertainty band using Sherpa.  To this
end, we make use of the Root NTuples generated in the previous steps.
Note that the setup files for reweighting are almost identical to those
for generating the NTuples.  We have simply replaced 'EVENT_OUTPUT' by
'EVENT_INPUT'.

First we re-evaluate the events with the scale increased by a factor 2:
  Sherpa -f Reweight.B-like.dat
  Sherpa -f Reweight.R-like.dat
Then we re-evaluate the events with the scale decreased by a factor 2:
  Sherpa -f Reweight.B-like.dat SCF:=0.25 -A Analysis/025HTp/BVI
  Sherpa -f Reweight.R-like.dat SCF:=0.25 -A Analysis/025HTp/RS
The two contributions can again be combined using 'aidaadd'.


File: Sherpa.info,  Node: SoftQCD,  Next: BFactories,  Prev: FONLO,  Up: Examples

9.10 Soft QCD: Minimum Bias and Cross Sections
==============================================

* Menu:

* Calculation of inclusive cross sections::
* Simulation of Minimum Bias events::


File: Sherpa.info,  Node: Calculation of inclusive cross sections,  Next: Simulation of Minimum Bias events,  Up: SoftQCD

9.10.1 Calculation of inclusive cross sections
----------------------------------------------

     (run){
       OUTPUT              = 2
       EVENT_TYPE          = MinimumBias 
       SOFT_COLLISIONS     = Shrimps
       Shrimps_Mode        = Xsecs
     
       deltaY    =  1.5;
       Lambda2   =  1.7;
       beta_0^2  =  20.0;
       kappa     =  0.6;
       xi        =  0.2;
       lambda    =  0.3;
       Delta     =  0.4;
     }(run)
     
     (beam){
       BEAM_1 =  2212; BEAM_ENERGY_1 = 450.;
       BEAM_2 =  2212; BEAM_ENERGY_2 = 450.;
     }(beam)
     
     (me){
       ME_SIGNAL_GENERATOR = None
     }(me)
     

Things to notice:
   * Inclusive cross sections (total, inelastic, low-mass
     single-diffractive, low-mass double-diffractive, elastic) and the
     elastic slope are calculated for varying c.m.  energies in pp
     collisions
   * The results are written to the file
     InclusiveQuantities/xsecs_total.dat and to the screen.  The
     directory will automatically be created in the path from where
     Sherpa is run.
   * The parameters of the model are not very well tuned.


File: Sherpa.info,  Node: Simulation of Minimum Bias events,  Prev: Calculation of inclusive cross sections,  Up: SoftQCD

9.10.2 Simulation of Minimum Bias events
----------------------------------------

     (run){
       EVENTS              = 50k
       OUTPUT              = 2
       EVENT_TYPE          = MinimumBias 
       SOFT_COLLISIONS     = Shrimps
       Shrimps_Mode        = Inelastic 
     
       ANALYSIS            = Rivet
     
       ANALYSIS_OUTPUT     = test6
     
       ALPHAS(MZ) 0.118;
       ORDER_ALPHAS 1;
       CSS_FS_PT2MIN       1.00
       MAX_PROPER_LIFETIME = 10.
     
       deltaY    =  1.5;
       Lambda2   =  1.376;
       beta_0^2  =  18.76;
       kappa     =  0.6;
       xi        =  0.2;
       lambda    =  0.2151;
       Delta     =  0.3052;
     
       Q_0^2           = 2.25;
       Chi_S           = 1.0;
       Shower_Min_KT2  = 4.0;
       Diff_Factor     = 4.0;
       KT2_Factor      = 4.0;
       RescProb        = 2.0;
       RescProb1       = 0.5;
       Q_RC^2          = 0.9;
       ReconnProb      = -25.;
       Resc_KTMin      = off;
     
       Misha           = 0
     }(run)
     
     (beam){
       BEAM_1 =  2212; BEAM_ENERGY_1 = 3500.;
       BEAM_2 =  2212; BEAM_ENERGY_2 = 3500.;
     }(beam)
     
     (analysis){
       BEGIN_RIVET {
       -a ATLAS_2010_S8918562 ATLAS_2010_S8894728 ATLAS_2011_S8994773 ATLAS_2012_I1084540 TOTEM_2012_DNDETA ATLAS_2011_I919017 CMS_2011_S8978280 CMS_2011_S9120041 CMS_2011_S9215166 CMS_2010_S8656010 CMS_2011_S8884919 CMS_QCD_10_024
       } END_RIVET
     }(analysis)
     
     (me){
       ME_SIGNAL_GENERATOR = None
     }(me)
     
     

Things to notice:
   * The SHRiMPS model is not properly tuned yet - all parameters are
     set to very natural values, such as for example 1.0 GeV for
     infrared parameters.
   * Eleastic scattering and low-mass diffraction are not included.
   * A large number of Minimum Bias-type analyses is enabled.


File: Sherpa.info,  Node: BFactories,  Next: MEvalues,  Prev: SoftQCD,  Up: Examples

9.11 Setups for event production at B-factories
===============================================

* Menu:

* QCD continuum::
* Signal process::
* Single hadron decay chains::


File: Sherpa.info,  Node: QCD continuum,  Next: Signal process,  Up: BFactories

9.11.1 QCD continuum
--------------------

Example setup for QCD continuum production at the Belle/KEK collider.
Please note, it does not include any hadronic resonance.
     (run){
       % general settings
       EVENTS 5M;
       % model parameters
       ALPHAS(MZ) 0.1188;
       ORDER_ALPHAS 1;
       MASSIVE[4] 1;
       MASSIVE[5] 1;
       MASSIVE_PS 3;
       % collider setup
       BEAM_1  11; BEAM_ENERGY_1 7.;
       BEAM_2 -11; BEAM_ENERGY_2 4.;
     }(run)
     
     (processes){
       Process 11 -11 -> 93 93;
       Order (*,2);
       End process;
       Process 11 -11 -> 4 -4;
       Order (*,2);
       End process;
       Process 11 -11 -> 5 -5;
       Order (*,2);
       End process;
     }(processes)

Things to notice:
   * Asymmetric beam energies, photon ISR is switched on per default.
   * Full mass effects of c and b quarks computed.
   * Strong coupling constant value set to 0.1188 and two loop (NLO)
     running.


File: Sherpa.info,  Node: Signal process,  Next: Single hadron decay chains,  Prev: QCD continuum,  Up: BFactories

9.11.2 Signal process
---------------------

Example setup for B-hadron pair production on the Y(4S) pole.
     (run){
       % general settings
       EVENTS 5M;
       % model parameters
       ALPHAS(MZ) 0.1188;
       ORDER_ALPHAS 1;
       MASSIVE[4] 1;
       MASSIVE[5] 1;
       MASSIVE_PS 3;
       ME_SIGNAL_GENERATORS Internal;
       SCALES VAR{sqr(91.2)};
       % collider setup
       BEAM_1  11; BEAM_ENERGY_1 7.;
       BEAM_2 -11; BEAM_ENERGY_2 4.;
     }(run)
     
     (processes){
       #
       # electron positron -> Y(4S) -> B+ B-
       #
       Process 11 -11 -> 300553[a];
       Decay 300553[a] -> 521 -521;
       End process;
       #
       # electron positron -> Y(4S) -> B0 B0bar
       #
       Process 11 -11 -> 300553[a];
       Decay 300553[a] -> 511 -511;
       End process;
     }(processes)

Things to notice:
   * Same setup as *note QCD continuum::, except for process
     specification.
   * Production of both B0 and B+ pairs, in due proportion.


File: Sherpa.info,  Node: Single hadron decay chains,  Prev: Signal process,  Up: BFactories

9.11.3 Single hadron decay chains
---------------------------------

This setup is not a collider setup, but a simulation of a hadronic decay
chain.
     (run){
       % general settings
       EVENTS 5M;
       EVENT_TYPE HadronDecay;
     
       % specify hadron to be decayed
       DECAYER 511;
     
       % initialise rest for Sherpa not to complain
       % model parameters
       ME_SIGNAL_GENERATORS Internal;
       SCALES VAR{sqr(91.2)};
       % collider setup
       BEAM_1  11; BEAM_ENERGY_1 7.;
       BEAM_2 -11; BEAM_ENERGY_2 4.;
     #  ANALYSIS=Rivet
     }(run)
     
     (processes){
       Process 11 -11 -> 13 -13;
       End process;
     }(processes)
     
     #(analysis){
     #  BEGIN_RIVET {
     #  -a BELLE_2015_I1397632
     #  } END_RIVET
     #}(analysis)

Things to notice:
   * 'EVENT_TYPE' is set to 'HadronDecay'.
   * 'DECAYER' specifies the hadron flavour initialising the decay
     chain.
   * A place holder process is declared such that the Sherpa framework
     can be initialised.  That process will not be used.


File: Sherpa.info,  Node: MEvalues,  Next: APIexamples,  Prev: BFactories,  Up: Examples

9.12 Calculating matrix element values for externally given configurations
==========================================================================

* Menu:

* Matrix Element values through Python interface::
* Matrix Element values through C++ interface::


File: Sherpa.info,  Node: Matrix Element values through Python interface,  Next: Matrix Element values through C++ interface,  Up: MEvalues

9.12.1 Computing matrix elements for idividual phase space points using the Python Interface
--------------------------------------------------------------------------------------------

Sherpa's Python interface (see *note Python Interface::) can be used to
compute matrix elemtents for individual phase space points.  Access to a
designated class "MEProcess" is provided by interface to compute matrix
elements as illustrated in the example script.

Please note that the process in the script must be compatible with the
one specified in the run card in the working directory.  A random phase
space point for the process of interes can be generated as shown in the
example.

If AMEGIC++ is used as the matrix element generator, executing the
script will result in AMEGIC++ writing out libraries and exiting.  After
compiling the libraries using './makelibs', the script must be executed
again in order to obtain the matrix element.

     #!/usr/bin/env python2
     @LOADMPIFORPY@
     import sys
     sys.path.append('@PYLIBDIR@')
     import Sherpa
     
     # Add this to the execution arguments to prevent Sherpa from starting the cross section integration
     sys.argv.append('INIT_ONLY=2')
     
     Generator=Sherpa.Sherpa()
     try:
         Generator.InitializeTheRun(len(sys.argv),sys.argv)
         Process=Sherpa.MEProcess(Generator)
     
         # Incoming flavors must be added first!
         Process.AddInFlav(11);
         Process.AddInFlav(-11);
         Process.AddOutFlav(1);
         Process.AddOutFlav(-1);
         Process.Initialize();
     
         # First argument corresponds to particle index:
         # index 0 correspons to particle added first, index 1 is the particle added second, and so on...
         Process.SetMomentum(0, 45.6,0.,0.,45.6)
         Process.SetMomentum(1, 45.6,0.,0.,-45.6)
         Process.SetMomentum(2, 45.6,0.,45.6,0.)
         Process.SetMomentum(3, 45.6,0.,-45.6,0.)
         print '\nSquared ME: ', Process.CSMatrixElement()
     
         # Momentum setting via list of floats
         Process.SetMomenta([[45.6,0.,0.,45.6],
                             [45.6,0.,0.,-45.6],
                             [45.6,0.,45.6,0.],
                             [45.6,0.,-45.6,0.]])
         print '\nSquared ME: ', Process.CSMatrixElement()
         
         # Random momenta
         E_cms = 500.0
         tp = Process.TestPoint(E_cms)
         print '\nRandom test point: ', tp[0], tp[1], tp[2], tp[3]
         print 'Squared ME: ', Process.CSMatrixElement(), '\n'
     
     except Sherpa.Exception as exc:
         print exc
         exit(1)


File: Sherpa.info,  Node: Matrix Element values through C++ interface,  Prev: Matrix Element values through Python interface,  Up: MEvalues

9.12.2 Computing matrix elements for idividual phase space points using the C++ Interface
-----------------------------------------------------------------------------------------

Matrix elements values for user defined phase space points can also be
quarried using a small C++ executable provided in 'Examples/API/ME2'.
It can be compiled using the provided 'Makefile'.  The test program is
then run typing (note: the 'LD_LIBRARY_PATH' must be set to include
'<Sherpa-installation>/lib/SHERPA-MC')

./test <options>

where the usual options for Sherpa are passed.  An example run card,
giving both the process and the requested phase space points looks like

     (run){
       EVENTS 0;
       INIT_ONLY 2;
     }(run)
     
     (beam){
       BEAM_1  11; BEAM_ENERGY_1 45.6;
       BEAM_2 -11; BEAM_ENERGY_2 45.6;
     }(beam)
     
     (isr){
       PDF_LIBRARY None;
     }(isr)
     
     (processes){
       Process 11 -11 -> 2 -2 21 21 21 21
       End process;
     }(processes)
     
     (momenta){
       NUMBER_OF_POINTS 4
       Point 1
       11  45.6   0.0   0.0  45.6
      -11  45.6   0.0   0.0 -45.6
       21  10.0   0.0   0.0 -10.0 1 2
       21  10.0   0.0   0.0  10.0 2 3
       21  10.0  10.0   0.0   0.0 3 1
       21  10.0 -10.0   0.0   0.0 1 3
        2  25.6   0.0  25.6   0.0 3 0
       -2  25.6   0.0 -25.6   0.0 0 1
       End point
       Point 2
       11  45.6   0.0   0.0  45.6
      -11  45.6   0.0   0.0 -45.6
       21  12.0   0.0   0.0 -12.0 1 2
       21  12.0   0.0   0.0  12.0 2 3
       21  12.0  12.0   0.0   0.0 3 1
       21  12.0 -12.0   0.0   0.0 1 3
        2  21.6   0.0  21.6   0.0 3 0
       -2  21.6   0.0 -21.6   0.0 0 1
       End point
       Point 3
       11  45.6   0.0   0.0  45.6
      -11  45.6   0.0   0.0 -45.6
       21  14.0   0.0   0.0 -14.0 1 2
       21  14.0   0.0   0.0  14.0 2 3
       21  14.0  14.0   0.0   0.0 3 1
       21  14.0 -14.0   0.0   0.0 1 3
        2  17.6   0.0  17.6   0.0 3 0
       -2  17.6   0.0 -17.6   0.0 0 1
       End point
       Point 4
       11  45.6   0.0   0.0  45.6
      -11  45.6   0.0   0.0 -45.6
       21  16.0   0.0   0.0 -16.0 1 2
       21  16.0   0.0   0.0  16.0 2 3
       21  16.0  16.0   0.0   0.0 3 1
       21  16.0 -16.0   0.0   0.0 1 3
        2  13.6   0.0  13.6   0.0 3 0
       -2  13.6   0.0 -13.6   0.0 0 1
       End point
     }(momenta)

Please note that both the process and the beam specifications need to be
present in order for Sherpa to initialise properly.  The momenta need to
be given in the proper ordering employed in Sherpa, which can be read
from the process name printed on screen.  For each entry the sequence is
the following

  <pdg-id> <E> <px> <py> <pz> [triplet-index antitriplet-index]

with the colour indices ranging from 1..3 for both the triplet and the
antitriplet index in the colour-flow basis.  The colour information is
only needed if Comix is used for the calculation as Comix then also
gives the squared matrix element value for this colour cinfiguration.
In any case, the colour-summed value is printed to screen.

Alternatively, the momenta can be given in a separate file specified
through 'MOMENTA_DATA_FILE=<file>'.


File: Sherpa.info,  Node: APIexamples,  Prev: MEvalues,  Up: Examples

9.13 Using the Python interface
===============================

* Menu:

* Events:: Generating events
* MPIEvents:: Generating events with MPI


File: Sherpa.info,  Node: Events,  Next: MPIEvents,  Up: APIexamples

9.13.1 Generate events using scripts
------------------------------------

This example shows how to generate events with Sherpa using a Python
wrapper script.  For each event the weight, the number of trials and the
particle information is printed to stdout.  This script can be used as a
basis for constructing interfaces to own analysis routines.

     #!/usr/bin/python2
     @LOADMPIFORPY@
     import sys
     sys.path.append('@PYLIBDIR@')
     import Sherpa
     
     Generator=Sherpa.Sherpa()
     try:
         Generator.InitializeTheRun(len(sys.argv),sys.argv)
         Generator.InitializeTheEventHandler()
         for n in range(1,1+Generator.NumberOfEvents()):
             Generator.GenerateOneEvent()
             blobs=Generator.GetBlobList();
             print "Event",n,"{"
             ## print blobs
             print "  Weight ",blobs.GetFirst(1)["Weight"];
             print "  Trials ",blobs.GetFirst(1)["Trials"];
             for i in range(0,blobs.size()):
                 print "  Blob",i,"{"
                 ## print blobs[i];
                 print "    Incoming particles"
                 for j in range(0,blobs[i].NInP()):
                     part=blobs[i].InPart(j)
                     ## print part
                     s=part.Stat()
                     f=part.Flav()
                     p=part.Momentum()
                     print "     ",j,": ",s,f,p
                 print "    Outgoing particles"
                 for j in range(0,blobs[i].NOutP()):
                     part=blobs[i].OutPart(j)
                     ## print part
                     s=part.Stat()
                     f=part.Flav()
                     p=part.Momentum()
                     print "     ",j,": ",s,f,p
                 print "  } Blob",i
             print "} Event",n
             if ((n%100)==0): print "  Event ",n
         Generator.SummarizeRun()
             
     except Sherpa.Exception as exc:
         exit(1)


File: Sherpa.info,  Node: MPIEvents,  Prev: Events,  Up: APIexamples

9.13.2 Generate events with MPI using scripts
---------------------------------------------

This example shows how to generate events with Sherpa using a Python
wrapper script and MPI. For each event the weight, the number of trials
and the particle information is send to the MPI master node and written
into a single gzip'ed output file.  Note that you need the mpi4py module
to run this Example.  Sherpa must be configured and installed using
'--enable-mpi', see *note MPI parallelization::.

     #!/usr/bin/python2
     @LOADMPIFORPY@
     import sys
     sys.path.append('@PYLIBDIR@')
     import Sherpa
     import gzip
     
     class MyParticle:
         def __init__(self,p):
             self.kfc=p.Flav().Kfcode()
             if p.Flav().IsAnti(): self.kfc=-self.kfc
             self.E=p.Momentum()[0]
             self.px=p.Momentum()[1]
             self.py=p.Momentum()[2]
             self.pz=p.Momentum()[3]
         def __str__(self):
             return (str(self.kfc)+" "+str(self.E)+" "
                     +str(self.px)+" "+str(self.py)+" "+str(self.pz))
     
     Generator=Sherpa.Sherpa()
     try:
         Generator.InitializeTheRun(len(sys.argv),sys.argv)
         Generator.InitializeTheEventHandler()
         comm=MPI.COMM_WORLD
         rank=comm.Get_rank()
         size=comm.Get_size()
         if rank==0:
             outfile=gzip.GzipFile("events.gz",'w')
             for n in range(1,1+Generator.NumberOfEvents()):
                 for t in range(1,size):
                     weight=comm.recv(source=t,tag=t)
                     trials=comm.recv(source=t,tag=2*t)
                     parts=comm.recv(source=t,tag=3*t)
                     outfile.write("E "+str(weight)+" "+str(trials)+"\n")
                     for p in parts:
                         outfile.write(str(p)+"\n")
                 if (n%100)==0: print "  Event",n
             outfile.close()
         else:
             for n in range(1,1+Generator.NumberOfEvents()):
                 Generator.GenerateOneEvent()
                 blobs=Generator.GetBlobList();
                 weight=blobs.GetFirst(1)["Weight"]
                 trials=blobs.GetFirst(1)["Trials"]
                 parts=[]
                 for i in range(0,blobs.size()):
                     for j in range(0,blobs[i].NOutP()):
                         part=blobs[i].OutPart(j)
                         if part.Stat()==1 and part.HasDecBlob()==0:
                             parts.append(MyParticle(part))
                 comm.send(weight,dest=0,tag=rank)
                 comm.send(trials,dest=0,tag=2*rank)
                 comm.send(parts,dest=0,tag=3*rank)
         Generator.SummarizeRun()
     
     except Sherpa.Exception as exc:
         exit(1)


File: Sherpa.info,  Node: Getting help,  Next: Authors,  Prev: Examples,  Up: Top

10 Getting help
***************

If Sherpa exits abnormally, first check the Sherpa output for hints on
the reason of program abort, and try to figure out what has gone wrong
with the help of the Manual.  Note that Sherpa throwing a
‘normal_exit’ exception does not imply any abnormal program
termination!  When using AMEGIC++ Sherpa will exit with the message:
        New libraries created. Please compile.
In this case, follow the instructions given in *note Running Sherpa with
AMEGIC++::.

If this does not help, contact the Sherpa team (see the Sherpa Team
section of the website sherpa.hepforge.org), providing all information
on your setup.  Please include
  1. A complete tarred and gzipped set of the '.dat' files leading to
     the crash.  Use the status recovery directory 'Status__<date of
     crash>' produced before the program abort.
  2. The command line (including possible parameters) you used to start
     Sherpa.
  3. The installation log file, if available.


File: Sherpa.info,  Node: Authors,  Next: Copying,  Prev: Getting help,  Up: Top

11 Authors
**********

Sherpa was written by the Sherpa Team, see sherpa.hepforge.org.


File: Sherpa.info,  Node: Copying,  Next: References,  Prev: Authors,  Up: Top

12 Copying
**********

Sherpa is free software.  You can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation.  You should have received a copy of the GNU General
Public License along with the source for Sherpa; see the file COPYING.
If not, write to the Free Software Foundation, 59 Temple Place, Suite
330, Boston, MA 02111-1307, USA.

Sherpa is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

Sherpa was created during the Marie Curie RTN's HEPTOOLS, MCnet and
LHCphenonet.  The MCnet Guidelines apply, see the file GUIDELINES and
http://www.montecarlonet.org/index.php?p=Publications/Guidelines.


File: Sherpa.info,  Node: References,  Next: Index,  Prev: Copying,  Up: Top

Appendix A References
*********************

     [Ale05] S. Alekhin and others, _HERA and the LHC - A workshop on
     the implications of HERA for LHC physics: Proceedings Part A_,
     hep-ph/0601012.

     [Ali13] S. Alioli and others, _Update of the Binoth Les Houches
     Accord for a standard interface between Monte Carlo tools and
     one-loop programs_, arXiv:1308.3462.

     [Alw07] J. Alwall and others, _Comparative study of various
     algorithms for the merging of parton showers and matrix elements in
     hadronic collisions_, Eur.  Phys.  J. C53 (2008) 473-500
     [arXiv:0706.2569].

     [Arc08] J. Archibald and T. Gleisberg and S. Hoche and F. Krauss
     and M. Schonherr and S. Schumann and F. Siegert and J. C. Winter,
     _Simulation of photon-photon interactions in hadron collisions with
     Sherpa_, Nucl.  Phys.  179 (2008) 218-225 .

     [Bah08b] M. Bahr and others, _Herwig++ Physics and Manual_, Eur.
     Phys.  J. C58 (2008) 639-707 [arXiv:0803.0883].

     [Bal08] R. D. Ball and others, _A determination of parton
     distributions with faithful uncertainty estimation_, Nucl.  Phys.
     B809 (2009) 1-63 [arXiv:0808.1231].

     [Bar93] E. Barberio and Z. Wc as, _PHOTOS - a universal monte carlo
     for QED radiative corrections: version 2.0_, Comput.  Phys.
     Commun.  79 (1994) 291-308 .

     [Ber02] Z. Bern and L. J. Dixon and C. Schmidt, _Isolating a light
     Higgs boson from the di-photon background at the LHC_, Phys.  Rev.
     D66 (2002) 074018 [hep-ph/0206194].

     [Ber09a] C. F. Berger and Z. Bern and L. J. Dixon and F.
     Febres-Cordero and D. Forde and T. Gleisberg and H. Ita and D. A.
     Kosower and D. Ma^itre, _Next-to-leading order QCD predictions for
     W+3-Jet distributions at hadron colliders_, Phys.  Rev.  D80 (2009)
     074036 [arXiv:0907.1984].

     [Bin10a] T. Binoth and others, _A proposal for a standard interface
     between Monte Carlo tools and one-loop programs_, Comput.  Phys.
     Commun.  181 (2010) 1612-1622 [arXiv:1001.1307].

     [Bud74] V. M. Budnev and I. F. Ginzburg and G. V. Meledin and V. G.
     Serbo, _The two photon particle production mechanism.  Physical
     problems.  Applications.  Equivalent photon approximation_, Phys.
     Rept.  15 (1974) 181-281 .

     [Cac08] M. Cacciari and G. P. Salam and G. Soyez, _The Anti-k(t)
     jet clustering algorithm_, JHEP 0804 (2008) 063 [arXiv:0802.1189].

     [Car09] T. Carli and T. Gehrmann and S. Hoche, _Hadronic final
     states in deep-inelastic scattering with Sherpa_, Eur.  Phys.  J.
     C67 (2010) 73 [arXiv:0912.3715].

     [Cas11] F. Cascioli and P. Maierhofer and S. Pozzorini, _Scattering
     Amplitudes with Open Loops_, Eur.Phys.J. C72 (2012) 1889
     [arXiv:1111.5206].

     [Cat01a] S. Catani and F. Krauss and R. Kuhn and B. R. Webber, _QCD
     matrix elements + parton showers_, JHEP 11 (2001) 063
     [hep-ph/0109231].

     [Cat02] S. Catani and S. Dittmaier and M. H. Seymour and Z.
     Trocsanyi, _The dipole formalism for next-to-leading order QCD
     calculations with massive partons_, Nucl.  Phys.  B627 (2002)
     189-265 [hep-ph/0201036].

     [Cat96b] S. Catani and M. H. Seymour, _A general algorithm for
     calculating jet cross sections in NLO QCD_, Nucl.  Phys.  B485
     (1997) 291-419 [hep-ph/9605323].

     [Chr08] N. D. Christensen and C. Duhr, _FeynRules - Feynman rules
     made easy_, Comput.  Phys.  Commun.  180 (2009) 1614-1641
     [arXiv:0806.4194].

     [Chr09] N. D. Christensen and P. de Aquino and C. Degrande and C.
     Duhr and B. Fuks and M. Herquet and F. Maltoni and S. Schumann, _A
     comprehensive approach to new physics simulations_, Eur.  Phys.  J.
     C71 (2011) 1541 [arXiv:0906.2474].

     [Deg11] C. Degrande and C. Duhr and B. Fuks and D. Grellscheid and
     O. Mattelaer and T. Reiter, _UFO - The Universal FeynRules Output_,
     Comput.  Phys.  Commun.  138 (2012) 1201 [arXiv:1108.2040].

     [Dix13] L. J. Dixon and Y. Li, _Bounding the Higgs Boson Width
     Through Interferometry_, arXiv:1305.3854.

     [Dra00] P. D. Draggiotis and A. van Hameren and R. Kleiss, _SARGE:
     An algorithm for generating QCD-antennas_, Phys.  Lett.  B483
     (2000) 124-130 [hep-ph/0004047].

     [Duh06] C. Duhr and S. Hoche and F. Maltoni, _Color-dressed
     recursive relations for multi-parton amplitudes_, JHEP 08 (2006)
     062 [hep-ph/0607057].

     [Feb06] F. Febres Cordero and L. Reina and D. Wackeroth, _NLO QCD
     corrections to W boson production with a massive b-quark jet pair
     at the Tevatron p anti-p collider_, Phys.Rev.  D74 (2006) 034007
     [hep-ph/0606102].

     [Fie82a] R. D. Field and S. Wolfram, _A QCD model for e^+e^-
     annihilation_, Nucl.  Phys.  B213 (1983) 65 .

     [Fri98] S. Frixione, _Isolated photons in perturbative QCD_, Phys.
     Lett.  B429 (1998) 369-374 [hep-ph/9801442].

     [Gao13] J. Gao and M. Guzzi and J. Huston and H. L. Lai and Z. Li
     and others, _The CT10 NNLO Global Analysis of QCD_,
     arXiv:1302.6246.

     [Geh12] T. Gehrmann and S. Hoche and F. Krauss and M. Schonherr and
     F. Siegert, _NLO QCD matrix elements + parton showers in e^+e^- ->
     hadrons_, JHEP 01 (2013) 144 [arXiv:1207.5031].

     [Gle03b] T. Gleisberg and F. Krauss and C. G. Papadopoulos and A.
     Schalicke and S. Schumann, _Cross sections for multi-particle final
     states at a linear collider_, Eur.  Phys.  J. C34 (2004) 173-180
     [hep-ph/0311273].

     [Gle08] T. Gleisberg and S. Hoche, _Comix a new matrix element
     generator_, JHEP 12 (2008) 039 [arXiv:0808.3674].

     [Gle08b] T. Gleisberg and S. Hoche and F. Krauss and M. Schonherr
     and S. Schumann and F Siegert and J. Winter, _Event generation with
     Sherpa 1.1_, JHEP 02 (2009) 007 [arXiv:0811.4622].

     [Glu91a] M. Gluck and E. Reya and A. Vogt, _Photonic parton
     distributions_, Phys.  Rev.  D46 (1992) 1973-1979 .

     [Got82] T. D. Gottschalk, _A realistic model for e^+e^-
     annihilation including parton bremsstrahlung effects_, Nucl.  Phys.
     B214 (1983) 201 .

     [Got83] T. D. Gottschalk, _An improved description of hadronization
     in the QCD cluster model for e^+e^- annihilation_, Nucl.  Phys.
     B239 (1984) 349 .

     [Hag05] K. Hagiwara and others, _Supersymmetry simulations with
     off-shell effects for the CERN LHC and an ILC_, Phys.  Rev.  D73
     (2006) 055005 [hep-ph/0512260].

     [Ham02] A. van Hameren and C. G. Papadopoulos, _A hierarchical
     phase space generator for QCD antenna structures_, Eur.  Phys.  J.
     C25 (2002) 563-574 [hep-ph/0204055].

     [Hoc06] S. Hoche and others, _Matching Parton Showers and Matrix
     Elements_, hep-ph/0602031.

     [Hoe09] S. Hoche and F. Krauss and S. Schumann and F. Siegert, _QCD
     matrix elements and truncated showers_, JHEP 05 (2009) 053
     [arXiv:0903.1219].

     [Hoe09a] S. Hoche and S. Schumann and F. Siegert, _Hard photon
     production and matrix-element parton-shower merging_, Phys.  Rev.
     D81 (2010) 034026 [arXiv:0912.3501].

     [Hoe10] S. Hoche and F. Krauss and M. Schonherr and F. Siegert,
     _NLO matrix elements and truncated showers_, JHEP 08 (2011) 123
     [arXiv:1009.1127].

     [Hoe11] S. Hoche and F. Krauss and M. Schonherr and F. Siegert, _A
     critical appraisal of NLO+PS matching methods_, JHEP 09 (2012) 049
     [arXiv:1111.1220].

     [Hoe12a] S. Hoche and F. Krauss and M. Schonherr and F. Siegert,
     _QCD matrix elements + parton showers: The NLO case_, JHEP 04
     (2013) 027 [arXiv:1207.5030].

     [Hoe12b] S. Hoche and M. Schonherr, _Uncertainties in NLO + parton
     shower matched simulations of inclusive jet and dijet production_,
     Phys.Rev.  D86 (2012) 094042 arXiv:1208.2815.

     [Hoe13] S. Hoeche and J. Huang and G. Luisoni and M. Schoenherr and
     J. Winter, _Zero and one jet combined NLO analysis of the top quark
     forward-backward asymmetry_, Phys.Rev.  D88 (2013) 014040
     arXiv:1306.2703.

     [Hoe14a] S. Hoeche and F. Krauss and M. Schoenherr, _Uncertainties
     in MEPS@NLO calculations of h+jets_, arXiv:1401.7971.

     [Hoe14b] S. Hoeche and F. Krauss and S. Pozzorini and M. Schoenherr
     and J. M. Thompson and K. C. Zapp, _Triple vector boson production
     through Higgs-Strahlung with NLO multijet merging_,
     arXiv:1403.7516.

     [Hoe14c] S. Hoeche and S. Kuttimalai and S. Schumann and F.
     Siegert, _Beyond Standard Model calculations with Sherpa_, Eur.
     Phys.  J. C75 (2015) 135 [arXiv:1412.6478].

     [Hoe15] S. Hoeche and S. Prestel, _The midpoint between dipole and
     parton showers_, arXiv:1506.05057.

     [Jad93] S. Jadach and Z. Was and R. Decker and J. H. Kuhn, _The tau
     decay library TAUOLA: Version 2.4_, Comput.  Phys.  Commun.  76
     (1993) 361-380 .

     [Kan00] A. Kanaki and C. G. Papadopoulos, _HELAC: A package to
     compute electroweak helicity amplitudes_, Comput.  Phys.  Commun.
     132 (2000) 306-315 [hep-ph/0002082].

     [Kle85] R. Kleiss and W. J. Stirling, _Spinor techniques for
     calculating pbarpto W^pm/Z^0+jets_, Nucl.  Phys.  B262 (1985)
     235-262 .

     [Kle85a] R. Kleiss and W. J. Stirling and S. D. Ellis, _A new Monte
     Carlo treatment of multiparticle phase space at high energies_,
     Comput.  Phys.  Commun.  40 (1986) 359 .

     [Kle94] R. Kleiss and R. Pittau, _Weight optimization in
     multichannel Monte Carlo_, Comput.  Phys.  Commun.  83 (1994)
     141-146 [hep-ph/9405257].

     [Kra01] F. Krauss and R. Kuhn and G. Soff, _AMEGIC++ 1.0: A Matrix
     Element Generator In C++_, JHEP 02 (2002) 044 [hep-ph/0109036].

     [Kra02] F. Krauss, _Matrix elements and parton showers in hadronic
     interactions_, JHEP 0208 (2002) 015 [hep-ph/0205283].

     [Kra04] F. Krauss and A. Schalicke and S. Schumann and G. Soff,
     _Simulating W/Z + jets production at the Tevatron_, Phys.  Rev.
     D70 (2004) 114009 [hep-ph/0409106].

     [Kra05] F. Krauss and A. Schalicke and S. Schumann and G. Soff,
     _Simulating W/Z + jets production at the CERN LHC_, Phys.  Rev.
     D72 (2005) 054017 [hep-ph/0503280].

     [Kra10] F. Krauss and T. Laubrich and F. Siegert, _Simulation of
     hadron decays in Sherpa_, .

     [Lai10] H. L. Lai and M. Guzzi and J. Huston and Z. Li and P. M.
     Nadolsky and others, _New parton distributions for collider
     physics_, Phys.Rev.  D82 (2010) 074024 [arXiv:1007.2241].

     [Lan01] D. J. Lange, _The EvtGen particle decay simulation
     package_, Nucl.  Instrum.  Meth.  A462 (2001) 152-155 .

     [Lep80] G. P. Lepage, _VEGAS - An Adaptive Multi-dimensional
     Integration Program_, .

     [Lon01] L. Lonnblad, _Correcting the colour-dipole cascade model
     with fixed order matrix elements_, JHEP 05 (2002) 046
     [hep-ph/0112284].

     [Man01] M. L. Mangano and M. Moretti and R. Pittau, _Multijet
     matrix elements and shower evolution in hadronic collisions: W
     bbarb+n-jets as a case study_, Nucl.  Phys.  B632 (2002) 343-362
     [hep-ph/0108069].

     [Man02] M. L. Mangano and M. Moretti and F. Piccinini and R. Pittau
     and A. D. Polosa, _ALPGEN a generator for hard multiparton
     processes in hadronic collisions_, JHEP 07 (2003) 001
     [hep-ph/0206293].

     [Mar01] A. D. Martin and R. G. Roberts and W. J. Stirling and R. S.
     Thorne, _MRST2001: Partons and alpha_s from precise deep inelastic
     scattering and Tevatron jet data_, Eur.  Phys.  J. C23 (2002) 73-87
     [hep-ph/0110215].

     [Mar04] A. D. Martin and R. G. Roberts and W. J. Stirling and R. S.
     Thorne, _Parton distributions incorporating QED contributions_,
     Eur.  Phys.  J. C39 (2005) 155-161 [hep-ph/0411040].

     [Mar09a] A. D. Martin and W. J. Stirling and R. S. Thorne and G.
     Watt, _Parton distributions for the LHC_, Eur.  Phys.  J. C63
     (2009) 189-295 [arXiv:0901.0002].

     [Mar87] G. Marchesini and B. R. Webber, _Monte Carlo Simulation of
     General Hard Processes with Coherent QCD Radiation_, Nucl.  Phys.
     B310 (1988) 461 .

     [Mar99] A. D. Martin and R. G. Roberts and W. J. Stirling and R. S.
     Thorne, _Parton distributions and the LHC: W and Z production_,
     Eur.  Phys.  J. C14 (2000) 133-145 [hep-ph/9907231].

     [Nad08] P. M. Nadolsky and others, _Implications of CTEQ global
     analysis for collider observables_, Phys.  Rev.  D78 (2008) 013004
     [arXiv:0802.0007].

     [Nag03] Z. Nagy, _Next-to-leading order calculation of three-jet
     observables in hadron-hadron collisions_, Phys.  Rev.  D68 (2003)
     094002 [hep-ph/0307268].

     [Nag05] Z. Nagy and D. E. Soper, _Matching parton showers to NLO
     computations_, JHEP 10 (2005) 024 [hep-ph/0503053].

     [Rei01] L. Reina and S. Dawson, _Next-to-leading order results for
     t anti-t h production at the Tevatron_, Phys.Rev.Lett.  87 (2001)
     201804 [hep-ph/0107101].

     [Rei01a] L. Reina and S. Dawson and D. Wackeroth, _QCD corrections
     to associated t anti-t h production at the Tevatron_, Phys.Rev.
     D65 (2002) 053017 [hep-ph/0109066].

     [Rys09] M. G. Ryskin and A. D. Martin and V. A. Khoze, _Soft
     processes at the LHC I: Multi-component model_, Eur.  Phys.  J. C60
     (2009) 249-264 [arXiv:0812.2407].

     [Sch07a] S. Schumann and F. Krauss, _A parton shower algorithm
     based on Catani-Seymour dipole factorisation_, JHEP 03 (2008) 038
     [arXiv:0709.1027].

     [Sch08] M. Schonherr and F. Krauss, _Soft photon radiation in
     particle decays in Sherpa_, JHEP 12 (2008) 018 [arXiv:0810.5071].

     [Sjo06] T. Sjostrand and S. Mrenna and P. Skands, _PYTHIA 6.4
     physics and manual_, JHEP 05 (2006) 026 [hep-ph/0603175].

     [Sjo07] T. Sjostrand and S. Mrenna and P. Skands, _A brief
     introduction to PYTHIA 8.1_, Comput.  Phys.  Commun.  178 (2008)
     852-867 [arXiv:0710.3820].

     [Sjo87] T. Sjostrand and M. van Zijl, _A multiple-interaction model
     for the event structure in hadron collisions_, Phys.  Rev.  D36
     (1987) 2019 .

     [Wha05] M. R. Whalley and D. Bourilkov and R. C. Group, _The Les
     Houches Accord PDFs (LHAPDF) and LHAGLUE_, hep-ph/0508110.

     [Win03] J. C. Winter and F. Krauss and G. Soff, _A modified
     cluster-hadronisation model_, Eur.  Phys.  J. C36 (2004) 381-395
     [hep-ph/0311085].

     [Wol83] L. Wolfenstein, _Parametrization of the Kobayashi-Maskawa
     Matrix_, Phys.  Rev.  Lett.  51 (1983) 1945 .

     [Yen61] D. R. Yennie and S. C. Frautschi and H. Suura, _The
     Infrared Divergence Phenomena and High-Energy Processes_, Ann.
     Phys.  13 (1961) 379-452 .

     [Zar02] A. F. Zarnecki, _CompAZ: Parametrization of the luminosity
     spectra for the photon collider_, Acta Phys.  Polon.  B34 (2003)
     2741-2758 [hep-ex/0207021].

     [Bea03] D. M. Beazley, _Automated scientific software scripting
     with SWIG_, Future Generation Computer Systems 19 (2003) 599-609 .

     [Bu03] M. Buschmann and others, _Mass Effects in the Higgs-Gluon
     Coupling: Boosted vs Off-Shell Production_, JHEP 1502 (2015) 038
     [hep-ph/1410.5806].

     [Both17] E. Bothmann and M. Schonherr and F. Krauss, _Single
     top-quark production with Sherpa_, [arXiv:1711.02568] .

     [Gut18] C. Gutschow and J. M. Lindert and M. Schonherr, _Multi-jet
     merged top-pair production including electroweak corrections_, Eur.
     Phys.  J. C78 (2018) 317 [arXiv:1803.00950].


File: Sherpa.info,  Node: Index,  Prev: References,  Up: Top

Appendix B Index
****************

 [index ]
* Menu:

* 1/ALPHAQED(0):                         SM.                  (line   6)
* A:                                     SM.                  (line   6)
* ACTIVE[<id>]:                          SM.                  (line   6)
* ALPHAQED_DEFAULT_SCALE:                SM.                  (line   6)
* ALPHAS(MZ):                            SM.                  (line   6)
* ANALYSIS:                              ANALYSIS.            (line   6)
* ANALYSIS_OUTPUT:                       ANALYSIS_OUTPUT.     (line   6)
* ANALYSIS_OUTPUT <1>:                   Rivet analyses.      (line   6)
* ANALYSIS_OUTPUT <2>:                   HZTool analyses.     (line   6)
* BARYON_FRACTION:                       Fragmentation.       (line  79)
* BATCH_MODE:                            BATCH_MODE.          (line   6)
* BEAM_1:                                Beam Parameters.     (line   6)
* BEAM_2:                                Beam Parameters.     (line   6)
* BEAM_ENERGY_1:                         Beam Parameters.     (line   6)
* BEAM_ENERGY_2:                         Beam Parameters.     (line   6)
* BEAM_REMNANTS:                         Intrinsic Transverse Momentum.
                                                              (line   6)
* BEAM_SMAX:                             Beam Spectra.        (line   6)
* BEAM_SMIN:                             Beam Spectra.        (line   6)
* BEAM_SPECTRUM_1:                       Beam Spectra.        (line   6)
* BEAM_SPECTRUM_2:                       Beam Spectra.        (line   6)
* beta_0^2:                              Minimum Bias.        (line 123)
* BH_SETTINGS_FILE:                      Loop_Generator.      (line  13)
* BUNCH_1:                               ISR Parameters.      (line   6)
* BUNCH_2:                               ISR Parameters.      (line   6)
* CABIBBO:                               SM.                  (line   6)
* CHECK_BORN:                            Checking the pole cancellation.
                                                              (line   6)
* CHECK_FINITE:                          Checking the pole cancellation.
                                                              (line   6)
* CHECK_POLES:                           Checking the pole cancellation.
                                                              (line   6)
* CHECK_POLES_THRESHOLD:                 Checking the pole cancellation.
                                                              (line   6)
* Chi_S:                                 Minimum Bias.        (line 143)
* CKMORDER:                              SM.                  (line   6)
* CORE_SCALE:                            METS scale setting with multiparton core processes.
                                                              (line   6)
* COUPLINGS:                             COUPLINGS.           (line   6)
* COUPLING_SCHEME:                       COUPLING_SCHEME.     (line   6)
* CSS_ALPHAS_FREEZE_MODE:                CS Shower options.   (line   6)
* CSS_EVOLUTION_SCHEME:                  CS Shower options.   (line   6)
* CSS_EW_MODE:                           CS Shower options.   (line   6)
* CSS_FS_AS_FAC:                         CS Shower options.   (line   6)
* CSS_FS_PT2MIN:                         CS Shower options.   (line   6)
* CSS_IS_AS_FAC:                         CS Shower options.   (line   6)
* CSS_IS_PT2MIN:                         CS Shower options.   (line   6)
* CSS_KIN_SCHEME:                        CS Shower options.   (line   6)
* CSS_MASS_THRESHOLD:                    CS Shower options.   (line   6)
* CSS_MAXEM:                             CS Shower options.   (line   6)
* CSS_NOEM:                              CS Shower options.   (line   6)
* CSS_SCALE_SCHEME:                      CS Shower options.   (line   6)
* DEACTIVATE_GGH:                        HEFT.                (line   6)
* DEACTIVATE_PPH:                        HEFT.                (line   6)
* DECAYMODEL:                            Hadron decays.       (line   6)
* DECAYPATH:                             Hadron decays.       (line   6)
* DECAY_OFFSET:                          Fragmentation.       (line  79)
* DECAY_RESULT_DIRECTORY:                DECAY_RESULT_DIRECTORY.
                                                              (line   6)
* DECAY_TAU_HARD:                        DECAY_TAU_HARD.      (line   6)
* Delphes:                               Event output formats.
                                                              (line   6)
* Delta:                                 Minimum Bias.        (line 123)
* deltaY:                                Minimum Bias.        (line 123)
* DIPOLE_ALPHA:                          Dipole subtraction.  (line   6)
* DIPOLE_AMIN:                           Dipole subtraction.  (line   6)
* DIPOLE_KAPPA:                          Dipole subtraction.  (line   6)
* DIPOLE_NF_GSPLIT:                      Dipole subtraction.  (line   6)
* EPA_AlphaQED:                          Beam Spectra.        (line  69)
* EPA_Form_Factor_1:                     Beam Spectra.        (line  69)
* EPA_Form_Factor_2:                     Beam Spectra.        (line  69)
* EPA_ptMin_1:                           Beam Spectra.        (line  69)
* EPA_ptMin_2:                           Beam Spectra.        (line  69)
* EPA_q2Max_1:                           Beam Spectra.        (line  69)
* EPA_q2Max_2:                           Beam Spectra.        (line  69)
* ETA:                                   SM.                  (line   6)
* EVENTS:                                EVENTS.              (line   6)
* EVENT_DISPLAY_INTERVAL:                BATCH_MODE.          (line   6)
* EVENT_GENERATION_MODE:                 EVENT_GENERATION_MODE.
                                                              (line   6)
* EVENT_INPUT:                           Event output formats.
                                                              (line   6)
* EVENT_OUTPUT:                          Event output formats.
                                                              (line   6)
* EVENT_TYPE:                            EVENT_TYPE.          (line   6)
* EVENT_TYPE <1>:                        Minimum Bias.        (line  90)
* EVT_FILE_PATH:                         Event output formats.
                                                              (line   6)
* EVT_OUTPUT:                            OUTPUT.              (line   6)
* EW_SCHEME:                             SM.                  (line   6)
* E_LASER_:                              Beam Spectra.        (line  49)
* E_LASER_ <1>:                          Beam Spectra.        (line  49)
* FILE_SIZE:                             Event output formats.
                                                              (line   6)
* FINISH_OPTIMIZATION:                   FINISH_OPTIMIZATION. (line   6)
* FINITE_TOP_MASS:                       HEFT.                (line   6)
* FINITE_W_MASS:                         HEFT.                (line   6)
* FRAGMENTATION:                         Fragmentation.       (line   9)
* HARD_DECAYS:                           Hard decays.         (line   6)
* HARD_MASS_SMEARING:                    HARD_MASS_SMEARING.  (line   6)
* HARD_SPIN_CORRELATIONS:                HARD_SPIN_CORRELATIONS.
                                                              (line   6)
* HARD_SPIN_CORRELATIONS <1>:            Hadron decays.       (line 214)
* HDH_BR_WEIGHTS:                        HDH_BR_WEIGHTS.      (line   6)
* HDH_INT_ACCURACY:                      Decay table integration settings.
                                                              (line   6)
* HDH_INT_NITER:                         Decay table integration settings.
                                                              (line   6)
* HDH_INT_TARGET_MODE:                   Decay table integration settings.
                                                              (line   6)
* HDH_SET_WIDTHS:                        HDH_SET_WIDTHS.      (line   6)
* HDH_STATUS[<idcode>]:                  HDH_STATUS.          (line   6)
* HDH_WIDTH[<idcode>]:                   HDH_WIDTH.           (line   6)
* HEAVY_BARYON_ENHANCEMEMT:              Fragmentation.       (line  44)
* HEPEVT:                                Event output formats.
                                                              (line   6)
* HepMC_GenEvent:                        Event output formats.
                                                              (line   6)
* HepMC_Short:                           Event output formats.
                                                              (line   6)
* HIGGS_INTERFERENCE_MODE:               LHC_HInt.            (line   6)
* HIGGS_INTERFERENCE_ONLY:               LHC_HInt.            (line   6)
* HIGGS_INTERFERENCE_SPIN:               LHC_HInt.            (line   6)
* INTEGRATION_ERROR:                     INTEGRATION_ERROR.   (line   6)
* INTEGRATOR:                            INTEGRATOR.          (line   6)
* ISR_E_ORDER:                           ISR Parameters.      (line   6)
* ISR_E_SCHEME:                          ISR Parameters.      (line   6)
* ISR_SMAX:                              ISR Parameters.      (line   6)
* ISR_SMIN:                              ISR Parameters.      (line   6)
* kappa:                                 Minimum Bias.        (line 123)
* KFACTOR:                               KFACTOR.             (line   6)
* KT2_Factor:                            Minimum Bias.        (line 143)
* K_PERP_MEAN_1:                         Intrinsic Transverse Momentum.
                                                              (line   6)
* K_PERP_MEAN_2:                         Intrinsic Transverse Momentum.
                                                              (line   6)
* K_PERP_SIGMA_1:                        Intrinsic Transverse Momentum.
                                                              (line   6)
* K_PERP_SIGMA_2:                        Intrinsic Transverse Momentum.
                                                              (line   6)
* LAMBDA:                                SM.                  (line   6)
* lambda:                                Minimum Bias.        (line 123)
* Lambda2:                               Minimum Bias.        (line 123)
* LASER_ANGLES:                          Beam Spectra.        (line  49)
* LASER_MODE:                            Beam Spectra.        (line  49)
* LASER_NONLINEARITY:                    Beam Spectra.        (line  49)
* LHEF:                                  Event output formats.
                                                              (line   6)
* LHOLE_BOOST_TO_CMS:                    External one-loop ME.
                                                              (line   6)
* LHOLE_CONTRACTFILE:                    External one-loop ME.
                                                              (line   6)
* LHOLE_IR_REGULARISATION:               External one-loop ME.
                                                              (line   6)
* LHOLE_OLP:                             External one-loop ME.
                                                              (line   6)
* LHOLE_ORDERFILE:                       External one-loop ME.
                                                              (line   6)
* LOG_FILE:                              LOG_FILE.            (line   6)
* Loop_Generator:                        MCFM interface.      (line   6)
* LOOP_ME_INIT:                          Enforcing the renormalization scheme.
                                                              (line   6)
* MassExponent_C->HH:                    Fragmentation.       (line 111)
* MASSIVE[<id>]:                         SM.                  (line   6)
* MASS[<id>]:                            SM.                  (line   6)
* MASS[<id>] <1>:                        Hadron decays.       (line   6)
* MAX_PROPER_LIFETIME:                   Hadron decays.       (line   6)
* MEMLEAK_WARNING_THRESHOLD:             RLIMIT_AS.           (line   6)
* ME_QED:                                ME_QED.              (line   6)
* ME_QED_CLUSTERING:                     ME_QED_CLUSTERING.   (line   6)
* ME_QED_CLUSTERING_THRESHOLD:           ME_QED_CLUSTERING_THRESHOLD.
                                                              (line   6)
* ME_SIGNAL_GENERATOR:                   ME_SIGNAL_GENERATOR. (line   6)
* Mixing_0+:                             Fragmentation.       (line  44)
* Mixing_1-:                             Fragmentation.       (line  44)
* MI_HANDLER:                            MI_HANDLER.          (line   6)
* MI_RESULT_DIRECTORY:                   MI_RESULT_DIRECTORY. (line   6)
* MI_RESULT_DIRECTORY_SUFFIX:            MI_RESULT_DIRECTORY_SUFFIX.
                                                              (line   6)
* MODEL:                                 Models.              (line   6)
* MOMENTA_DATA_FILE:                     Matrix Element values through C++ interface.
                                                              (line   6)
* MSTJ:                                  Fragmentation.       (line   9)
* MSTP:                                  Fragmentation.       (line   9)
* MSTU:                                  Fragmentation.       (line   9)
* MULTI_WEIGHT_L0R0_DELTA_3/2:           Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_N*_1/2:              Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_N_1/2:               Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_PSEUDOSCALARS:       Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_TENSORS2:            Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_TENSORS3:            Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_TENSORS4:            Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R0_VECTORS:             Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R1_AXIALVECTORS:        Fragmentation.       (line  44)
* MULTI_WEIGHT_L0R1_SCALARS:             Fragmentation.       (line  44)
* MULTI_WEIGHT_L1R0_AXIALVECTORS:        Fragmentation.       (line  44)
* MULTI_WEIGHT_L1R0_DELTA*_3/2:          Fragmentation.       (line  44)
* MULTI_WEIGHT_L1R0_N*_1/2:              Fragmentation.       (line  44)
* MULTI_WEIGHT_L1R0_N*_3/2:              Fragmentation.       (line  44)
* MULTI_WEIGHT_L1R0_SCALARS:             Fragmentation.       (line  44)
* MULTI_WEIGHT_L1R0_TENSORS2:            Fragmentation.       (line  44)
* MULTI_WEIGHT_L2R0_VECTORS:             Fragmentation.       (line  44)
* MULTI_WEIGHT_L3R0_VECTORS:             Fragmentation.       (line  44)
* M_BIND_0:                              Fragmentation.       (line  30)
* M_BIND_1:                              Fragmentation.       (line  30)
* M_BOTTOM:                              Fragmentation.       (line  30)
* M_CHARM:                               Fragmentation.       (line  30)
* M_DIQUARK_OFFSET:                      Fragmentation.       (line  30)
* M_STRANGE:                             Fragmentation.       (line  30)
* M_UP_DOWN:                             Fragmentation.       (line  30)
* NUMBER_OF_POINTS:                      Matrix Element values through C++ interface.
                                                              (line   6)
* NUM_ACCURACY:                          NUM_ACCURACY.        (line   6)
* ORDER_ALPHAS:                          SM.                  (line   6)
* OUTPUT:                                OUTPUT.              (line   6)
* OUTPUT_PRECISION:                      Event output formats.
                                                              (line   6)
* OVERWEIGHT_THRESHOLD:                  EVENT_GENERATION_MODE.
                                                              (line   6)
* PARJ:                                  Fragmentation.       (line   9)
* PARP:                                  Fragmentation.       (line   9)
* PARTICLE_CONTAINER:                    Particle containers. (line  22)
* PARU:                                  Fragmentation.       (line   9)
* PATH:                                  Input structure.     (line   6)
* PDF_LIBRARY:                           ISR Parameters.      (line   6)
* PDF_LIBRARY_1:                         ISR Parameters.      (line   6)
* PDF_LIBRARY_2:                         ISR Parameters.      (line   6)
* PDF_SET:                               ISR Parameters.      (line   6)
* PDF_SET_1:                             ISR Parameters.      (line   6)
* PDF_SET_2:                             ISR Parameters.      (line   6)
* PDF_SET_VERSION:                       ISR Parameters.      (line   6)
* PROFILE_FUNCTION:                      PROFILE_FUNCTION.    (line   6)
* PROFILE_PARAMETERS:                    PROFILE_PARAMETERS.  (line   6)
* PSI_ITMAX:                             PSI_ITMAX.           (line   6)
* PSI_ITMAX_BY_NODE:                     PSI_ITMAX_BY_NODE.   (line   6)
* PSI_ITMIN:                             PSI_ITMIN.           (line   6)
* PSI_ITMIN_BY_NODE:                     PSI_ITMIN_BY_NODE.   (line   6)
* PSI_NMAX:                              PSI_NMAX.            (line   6)
* PT^2_0:                                Fragmentation.       (line 127)
* PT_MAX:                                Fragmentation.       (line 127)
* P_LASER_:                              Beam Spectra.        (line  49)
* P_LASER_ <1>:                          Beam Spectra.        (line  49)
* P_{QQ_1}/P_{QQ_0}:                     Fragmentation.       (line  79)
* P_{QS}/P_{QQ}:                         Fragmentation.       (line  79)
* P_{SS}/P_{QQ}:                         Fragmentation.       (line  79)
* Q_0^2:                                 Minimum Bias.        (line 143)
* Q_as^2:                                Fragmentation.       (line 127)
* Q_as^2 <1>:                            Minimum Bias.        (line 143)
* Q_RC^2:                                Minimum Bias.        (line 143)
* RANDOM_SEED:                           RANDOM_SEED.         (line   6)
* ReconnProb:                            Minimum Bias.        (line 143)
* REFERENCE_SCALE:                       REFERENCE_SCALE.     (line   6)
* RESCALE_EXPONENT:                      RESCALE_EXPONENT.    (line   6)
* RescProb:                              Minimum Bias.        (line 143)
* RescProb1:                             Minimum Bias.        (line 143)
* Resc_KTMin:                            Minimum Bias.        (line 143)
* RESOLVE_DECAYS:                        RESOLVE_DECAYS.      (line   6)
* RESULT_DIRECTORY:                      RESULT_DIRECTORY.    (line   6)
* RHO:                                   SM.                  (line   6)
* RLIMIT_AS:                             RLIMIT_AS.           (line   6)
* RLIMIT_BY_CPU:                         RLIMIT_AS.           (line   6)
* Root:                                  Event output formats.
                                                              (line   6)
* RUNDATA:                               Input structure.     (line   6)
* SCALES:                                SCALES.              (line   6)
* SCALE_MIN:                             SCALE_MIN.           (line   6)
* SHERPA_CPP_PATH:                       SHERPA_CPP_PATH.     (line   6)
* SHERPA_LDADD:                          Customization.       (line   6)
* SHERPA_LIB_PATH:                       SHERPA_LIB_PATH.     (line   6)
* SHERPA_VERSION:                        SHERPA_VERSION.      (line   6)
* Shower_Min_KT2:                        Minimum Bias.        (line 143)
* SHOW_PDF_SETS:                         ISR Parameters.      (line   6)
* SHOW_VARIABLE_SYNTAX:                  Universal selector.  (line   6)
* Shrimps_Mode:                          Minimum Bias.        (line  97)
* SIGMA_ND_FACTOR:                       SIGMA_ND_FACTOR.     (line   6)
* SIN2THETAW:                            SM.                  (line   6)
* SINGLET_SUPPRESSION:                   Fragmentation.       (line  44)
* SOFT_COLLISIONS:                       Minimum Bias.        (line  90)
* SOFT_MASS_SMEARING:                    Hadron decays.       (line   6)
* SOFT_SPIN_CORRELATIONS:                Hadron decays.       (line 214)
* SPECTRUM_FILE_1:                       Beam Spectra.        (line   6)
* SPECTRUM_FILE_2:                       Beam Spectra.        (line   6)
* STABLE[<id>]:                          SM.                  (line   6)
* STABLE[<id>] <1>:                      Hard decays.         (line   6)
* STABLE[<id>] <2>:                      Hadron decays.       (line   6)
* STORE_DECAY_RESULTS:                   STORE_DECAY_RESULTS. (line   6)
* STRANGE_FRACTION:                      Fragmentation.       (line  79)
* TIMEOUT:                               TIMEOUT.             (line   6)
* TRANSITION_OFFSET:                     Fragmentation.       (line  79)
* TUNE:                                  TUNE.                (line   6)
* TURNOFF:                               TURNOFF.             (line   6)
* TURNOFF_EXPONENT:                      TURNOFF_EXPONENT.    (line   6)
* UFO_PARAM_CARD:                        UFO Model Interface. (line   6)
* USE_PDF_ALPHAS:                        SM.                  (line   6)
* USR_WGT_MODE:                          A posteriori scale and PDF variations using the ROOT NTuple Output.
                                                              (line   6)
* VEGAS:                                 VEGAS.               (line   6)
* VEV:                                   SM.                  (line   6)
* WIDTH[<id>]:                           SM.                  (line   6)
* WIDTH[<id>] <1>:                       HDH_SET_WIDTHS.      (line   6)
* WIDTH[<id>] <2>:                       Hadron decays.       (line   6)
* WIDTH_SCHEME:                          SM.                  (line   6)
* xi:                                    Minimum Bias.        (line 123)
* YFS_IR_CUTOFF:                         YFS_IR_CUTOFF.       (line   6)
* YFS_MODE:                              YFS_MODE.            (line   6)
* YFS_USE_ME:                            YFS_USE_ME.          (line   6)
* YUKAWA[<id>]:                          SM.                  (line   6)
* YUKAWA_MASSES:                         YUKAWA_MASSES.       (line   6)

